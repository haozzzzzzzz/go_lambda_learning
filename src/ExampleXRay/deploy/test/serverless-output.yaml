AWSTemplateFormatVersion: '2010-09-09'
Description: AWS Serverless Function
Outputs:
  ApiUrl:
    Description: ExampleXRaytest(test) Api URL
    Value:
      Fn::Sub: https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/test
Resources:
  ApiAccessPermission:
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: ExampleXRaytest
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayApi}/test/*/*
    Type: AWS::Lambda::Permission
  ApiGatewayApi:
    Properties:
      DefinitionBody:
        basePath: /test
        info:
          title: ExampleXRaytest
          version: '1.0'
        paths:
          /{proxy+}:
            x-amazon-apigateway-any-method:
              produces:
              - application/json
              x-amazon-apigateway-integration:
                httpMethod: POST
                passthroughBehavior: when_no_match
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ExampleXRaytest.Arn}/invocations
        schemes:
        - https
        swagger: '2.0'
      Name: ExampleXRaytest
      StageName: test
    Type: AWS::Serverless::Api
  ExampleXRaytest:
    Properties:
      AutoPublishAlias: test
      CodeUri: s3://lh-lambda-deploy/example-x-ray-test/2018-05-08/ff132b82dafb8cd063f1089443fcd9ac
      DeploymentPreference:
        Type: AllAtOnce
      Description: AWS Serverless Function
      Events:
        ApiEvent:
          Properties:
            Method: ANY
            Path: /{proxy+}
            RestApiId:
              Ref: ApiGatewayApi
          Type: Api
      FunctionName: ExampleXRaytest
      Handler: ExampleXRaytest
      Role:
        Fn::GetAtt:
        - ExampleXRaytestRole
        - Arn
      Runtime: go1.x
      Timeout: 30
    Type: AWS::Serverless::Function
  ExampleXRaytestRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - logs:CreateLogStream
            - logs:CreateLogGroup
            - logs:PutLogEvents
            Effect: Allow
            Resource: arn:aws:logs:*:*:*
          Version: '2012-10-17'
        PolicyName: CloudWatchLogs
      - PolicyDocument:
          Statement:
          - Action:
            - xray:*
            Effect: Allow
            Resource: '*'
          Version: '2012-10-17'
        PolicyName: XRayFullAccess
      RoleName: ExampleXRaytestRole
    Type: AWS::IAM::Role
Transform: AWS::Serverless-2016-10-31
